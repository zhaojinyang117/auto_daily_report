<正文>
## 使用正则路由（`re_path`）

1. **位置参数**：使用 `()` 匹配路径中的正则参数，然后在视图函数中通过形参传递。
   ```python
   re_path("articles/(\d{4})/(\d{2})/", articles.views.article_detail)
   ```

   ```python
   def article_detail(request: HttpRequest, year: int, month: int):
       return HttpResponse(f"year: {year}, month: {month}")
   ```

2. **有名分组**：通过 `?P` 命名正则分组，然后在视图函数中使用关键字传参。
   ```python
   re_path("articles/(?P\d{4})/(?P\d{1,2})/", articles.views.article_detail)
   ```

   ```python
   def article_detail(request: HttpRequest, year: int, month: int):
       return HttpResponse(f"year: {year}, month: {month}")
   ```

## 路由分发

1. **目的**：减少项目根目录中的 URL 路由重量，实现解耦。
2. **方法**：在子应用中创建新的 `urls.py` 文件，然后通过 `include` 函数在主路由中包括这些 URL。
   ```python
   path("home/", include("app01.urls"))
   ```

## 自定义路由转换器

1. **定义转换器类**：
   ```python
   class MobileConverter(object):
       regex = r"1[3-9]\d{9}"

       def to_python(self, value: str):
           return value
   ```

2. **注册转换器**：
   ```python
   register_converter(MobileConverter, "mobile")
   ```

3. **使用转换器**：
   ```python
   path("/", app01.views.mobile),
   ```

   ```python
   def mobile(request: HttpRequest, mobile_number: str):
       return HttpResponse(f"mobile: {mobile_number}")
   ```
</正文>
